{"ast":null,"code":"var _jsxFileName = \"/Users/ginnierichichi/code/ar-episode1/src/components/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { ReactComponent as UpArrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/up-arrow.svg\";\nimport gsap from 'gsap';\nimport { faBorderNone } from '@fortawesome/free-solid-svg-icons';\nlet tl = gsap.timeline();\n\nconst Header = ({\n  history,\n  dimentions\n}) => {\n  //want to know when menu is open to trigger animation\n  const [menuState, setMenuState] = useState({\n    menuOpened: false\n  });\n  useEffect(() => {\n    history.listen(() => {\n      setMenuState({\n        menuOpened: false\n      });\n    });\n\n    if (menuState.menuOpened === true) {\n      //Run open menu animations\n      tl.to('nav', {\n        duration: 0.01,\n        css: {\n          display: \"block\"\n        }\n      }).to('body', {\n        css: {\n          overflow: \"hidden\"\n        }\n      });\n      tl.to(\".App\", {\n        duration: 1,\n        y: dimentions.width <= 654 ? '70vh' : '55vh',\n        ease: \"expo.inOut\"\n      }).to(\".hamburger-menu span\", {\n        duration: 0.6,\n        delay: -1,\n        scaleX: 0,\n        transformOrigin: \"50% 0%\",\n        ease: \"expo.inOut\"\n      }).to('#Path_1', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 10,\n          strokeDasharray: 5\n        }\n      }).to('#Path_2', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 10,\n          strokeDasharray: 20\n        }\n      }).to('#Line_1', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 40,\n          strokeDasharray: 18\n        }\n      }).to('#circle', {\n        duration: 0.6,\n        delay: -0.8,\n        css: {\n          strokeDashoffset: 0\n        }\n      }).to('.hamburger-menu-close', {\n        duration: 0.6,\n        delay: -0.8,\n        css: {\n          display: \"block\"\n        }\n      });\n    } else {\n      //Run close menu animation\n      tl.to('.App', {\n        duration: 1,\n        y: 0,\n        ease: \"expo.inOut\"\n      }).to('#circle', {\n        duration: 0.6,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: -193,\n          strokeDasharray: 227\n        }\n      }).to('#Path_1', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 10,\n          strokeDasharray: 10\n        }\n      }).to('#Path_2', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 10,\n          strokeDasharray: 10\n        }\n      }).to('#Line_1', {\n        duration: 0.4,\n        delay: -0.6,\n        css: {\n          strokeDashoffset: 40,\n          strokeDasharray: 40\n        }\n      }).to(\".hamburger-menu span\", {\n        duration: 0.6,\n        delay: -0.6,\n        scaleX: 1,\n        transformOrigin: \"50% 0%\",\n        ease: \"expo.inOut\"\n      }).to('.hamburger-menu-close', {\n        duration: 0,\n        css: {\n          display: \"none\"\n        }\n      }).to('body', {\n        css: {\n          overflow: \"auto\"\n        }\n      }).to('nav', {\n        css: {\n          display: \"none\"\n        }\n      });\n    }\n  }, [menuState.menuOpened]);\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row v-center space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"SPINELLI.\")), React.createElement(\"div\", {\n    className: \"nav-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => setMenuState({\n      menuOpened: true\n    }),\n    className: \"hamburger-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    onClick: () => setMenuState({\n      menuOpened: false\n    }),\n    className: \"hamburger-menu-close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(UpArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))))));\n};\n\nexport default withRouter(Header);","map":{"version":3,"sources":["/Users/ginnierichichi/code/ar-episode1/src/components/Header.js"],"names":["React","useState","useEffect","NavLink","withRouter","gsap","faBorderNone","tl","timeline","Header","history","dimentions","menuState","setMenuState","menuOpened","listen","to","duration","css","display","overflow","y","width","ease","delay","scaleX","transformOrigin","strokeDashoffset","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { ReactComponent as UpArrow } from '../assets/up-arrow.svg';\nimport gsap from 'gsap';\nimport { faBorderNone } from '@fortawesome/free-solid-svg-icons';\n\nlet tl = gsap.timeline()\n\nconst Header = ({history, dimentions}) => {\n    //want to know when menu is open to trigger animation\n    const [menuState, setMenuState] = useState({menuOpened: false});\n\n    useEffect(() => {\n        history.listen(() => {\n            setMenuState({ menuOpened: false})\n        });\n\n        if(menuState.menuOpened === true) {\n            //Run open menu animations\n            tl.to('nav', {duration: 0.01, css: {display: \"block\"}}).to('body', {css: {overflow: \"hidden\"}});\n\n            tl.to(\".App\", {\n                duration: 1,\n                y: dimentions.width <= 654 ? '70vh' : '55vh',\n                ease: \"expo.inOut\"\n            }).to(\".hamburger-menu span\", {\n                duration: 0.6,\n                delay: -1,\n                scaleX: 0,\n                transformOrigin: \"50% 0%\",\n                ease: \"expo.inOut\"\n            }).to('#Path_1', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 10,\n                    strokeDasharray: 5\n                }\n            }).to('#Path_2', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 10,\n                    strokeDasharray: 20\n                }\n            }).to('#Line_1', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 40,\n                    strokeDasharray: 18\n                }\n            }).to('#circle', {\n                duration: 0.6,\n                delay: -0.8,\n                css: {\n                    strokeDashoffset: 0,\n                }\n            }).to('.hamburger-menu-close', {\n                duration: 0.6,\n                delay: -0.8,\n                css: {\n                    display: \"block\",\n                }\n            });\n        } else {\n            //Run close menu animation\n            tl.to('.App', {\n                duration: 1,\n                y: 0,\n                ease: \"expo.inOut\",\n            }).to('#circle', {\n                duration: 0.6,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: -193,\n                    strokeDasharray: 227 \n                }\n            }).to('#Path_1', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 10,\n                    strokeDasharray: 10 \n                }\n            }).to('#Path_2', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 10,\n                    strokeDasharray: 10\n                }\n            }).to('#Line_1', {\n                duration: 0.4,\n                delay: -0.6,\n                css: {\n                    strokeDashoffset: 40,\n                    strokeDasharray: 40 \n                }\n            }).to(\".hamburger-menu span\", {\n                duration: 0.6,\n                delay: -0.6,\n                scaleX: 1,\n                transformOrigin: \"50% 0%\",\n                ease: \"expo.inOut\"\n            }).to('.hamburger-menu-close', {\n                duration: 0,\n                css: {\n                    display: \"none\",\n                }\n            }).to('body', {\n                css: {\n                    overflow: \"auto\",\n                }\n            }).to('nav', {\n                css: {\n                    display: \"none\",\n                }\n            }); \n        }\n    }, [menuState.menuOpened]);\n\n    return (\n        <div className=\"header\">\n             <div className=\"container\">\n                <div className=\"row v-center space-between\">\n                    <div className=\"logo\">\n                        <NavLink to=\"/\">SPINELLI.</NavLink>\n                    </div>\n                    <div className=\"nav-toggle\">\n                        <div onClick={() => setMenuState({menuOpened: true})} className=\"hamburger-menu\">\n                            <span></span>\n                            <span></span>\n                        </div>\n                        <div onClick={() => setMenuState({menuOpened: false})} className=\"hamburger-menu-close\">\n                            <UpArrow />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Header);\n\n"]},"metadata":{},"sourceType":"module"}