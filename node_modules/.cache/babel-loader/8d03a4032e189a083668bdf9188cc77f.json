{"ast":null,"code":"var _jsxFileName = \"/Users/ginnierichichi/code/ar-episode1/src/pages/Home.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport gsap from \"gsap\";\nimport Banner from '../components/Banner';\nimport Cases from '../components/Cases';\nimport IntroOverlay from '../components/IntroOverlay'; //timeline\n\nconst tl = gsap.timeline();\n\nconst homeAnimation = completeAnimation => {\n  tl.from(\".line span\", 1, {\n    y: 100,\n    ease: \"power4.out\",\n    delay: 1,\n    skewY: 7,\n    stagger: {\n      amount: 0.3\n    }\n  }).to('.overlay-top', 1.6, {\n    height: 0,\n    ease: \"expo.inOut\",\n    stagger: 0.4\n  }).to('.overlay-bottom', 1.6, {\n    width: 0,\n    ease: \"expo.inOut\",\n    delay: -.8,\n    stagger: {\n      amount: 0.4\n    }\n  }).to('.intro-overlay', 0, {\n    css: {\n      display: \"none\"\n    }\n  }).from('.caseImage img', 1.6, {\n    scale: 1.4,\n    ease: \"expo-inOut\",\n    delay: -2,\n    stagger: {\n      amount: 0.4\n    },\n    onComplete: completeAnimation\n  });\n};\n\nconst Home = () => {\n  const title = useRef(null);\n  const [animationComplete, setAnimationComplete] = useState(false);\n\n  const completeAnimation = () => {\n    setAnimationComplete(true);\n  };\n\n  useEffect(() => {\n    homeAnimation(completeAnimation);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(IntroOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Cases, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/ginnierichichi/code/ar-episode1/src/pages/Home.js"],"names":["React","useEffect","useRef","useState","gsap","Banner","Cases","IntroOverlay","tl","timeline","homeAnimation","completeAnimation","from","y","ease","delay","skewY","stagger","amount","to","height","width","css","display","scale","onComplete","Home","title","animationComplete","setAnimationComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CAEA;;AACA,MAAMC,EAAE,GAAGJ,IAAI,CAACK,QAAL,EAAX;;AAEA,MAAMC,aAAa,GAAIC,iBAAD,IAAuB;AACzCH,EAAAA,EAAE,CAACI,IAAH,CAAQ,YAAR,EAAsB,CAAtB,EAAyB;AACrBC,IAAAA,CAAC,EAAE,GADkB;AAErBC,IAAAA,IAAI,EAAE,YAFe;AAGrBC,IAAAA,KAAK,EAAE,CAHc;AAIrBC,IAAAA,KAAK,EAAE,CAJc;AAKrBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AALY,GAAzB,EAQKC,EARL,CAQQ,cARR,EAQwB,GARxB,EAQ6B;AACzBC,IAAAA,MAAM,EAAE,CADiB;AAEzBN,IAAAA,IAAI,EAAE,YAFmB;AAGzBG,IAAAA,OAAO,EAAE;AAHgB,GAR7B,EAYKE,EAZL,CAYQ,iBAZR,EAY2B,GAZ3B,EAYgC;AAC5BE,IAAAA,KAAK,EAAE,CADqB;AAE5BP,IAAAA,IAAI,EAAE,YAFsB;AAG5BC,IAAAA,KAAK,EAAE,CAAC,EAHoB;AAI5BE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAJmB,GAZhC,EAmBKC,EAnBL,CAmBQ,gBAnBR,EAmB0B,CAnB1B,EAmB6B;AACzBG,IAAAA,GAAG,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADoB,GAnB7B,EAqBKX,IArBL,CAqBU,gBArBV,EAqB4B,GArB5B,EAqBiC;AAC7BY,IAAAA,KAAK,EAAE,GADsB;AAE7BV,IAAAA,IAAI,EAAE,YAFuB;AAG7BC,IAAAA,KAAK,EAAE,CAAC,CAHqB;AAI7BE,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAJoB;AAO7BO,IAAAA,UAAU,EAAEd;AAPiB,GArBjC;AA8BH,CA/BD;;AAiCA,MAAMe,IAAI,GAAG,MAAM;AACf,QAAMC,KAAK,GAAGzB,MAAM,CAAC,IAAD,CAApB;AACA,QAAM,CAAC0B,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5BkB,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAIF5B,EAAAA,SAAS,CAAE,MAAM;AACfS,IAAAA,aAAa,CAACC,iBAAD,CAAb;AAED,GAHQ,EAGN,EAHM,CAAT;AAIE,SACG,0CACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADH;AAOH,CAnBD;;AAqBA,eAAee,IAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport gsap from \"gsap\";\nimport Banner from '../components/Banner'\nimport Cases from '../components/Cases'\nimport IntroOverlay from '../components/IntroOverlay'\n\n//timeline\nconst tl = gsap.timeline();\n\nconst homeAnimation = (completeAnimation) => {\n    tl.from(\".line span\", 1, {\n        y: 100,\n        ease: \"power4.out\",\n        delay: 1,\n        skewY: 7,\n        stagger: {\n          amount: 0.3\n        }\n      }).to('.overlay-top', 1.6, {\n        height: 0,\n        ease: \"expo.inOut\",\n        stagger: 0.4,\n      }).to('.overlay-bottom', 1.6, {\n        width: 0,\n        ease: \"expo.inOut\",\n        delay: -.8,\n        stagger: {\n          amount: 0.4\n        }\n      }).to('.intro-overlay', 0, {\n        css: { display: \"none\",}\n      }).from('.caseImage img', 1.6, {\n        scale: 1.4,\n        ease: \"expo-inOut\",\n        delay: -2,\n        stagger: {\n          amount: 0.4\n        },\n        onComplete: completeAnimation\n      });\n}\n\nconst Home = () => {\n    const title = useRef(null);\n    const [animationComplete, setAnimationComplete] = useState(false);\n\n    const completeAnimation = () => {\n        setAnimationComplete(true);\n    }\n\n  useEffect( () => {\n    homeAnimation(completeAnimation);\n    \n  }, []);\n    return (\n       <>\n        <IntroOverlay />\n        <Banner /> \n        <Cases /> \n       </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}